<?xml version="1.0" encoding="UTF-8"?>
<svg width="1400" height="900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 24px; font-weight: bold; fill: #2c3e50; }
      .section-title { font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; fill: #34495e; }
      .step-title { font-family: Arial, sans-serif; font-size: 13px; font-weight: bold; fill: #2c3e50; }
      .text { font-family: Arial, sans-serif; font-size: 11px; fill: #2c3e50; }
      .small-text { font-family: Arial, sans-serif; font-size: 10px; fill: #7f8c8d; }
      .detail-text { font-family: Arial, sans-serif; font-size: 10px; fill: #2c3e50; }
      
      .extraction-phase { fill: #e8f5e8; stroke: #27ae60; stroke-width: 2; rx: 8; }
      .processing-phase { fill: #e8f4f8; stroke: #3498db; stroke-width: 2; rx: 8; }
      .indexing-phase { fill: #fff3e0; stroke: #f39c12; stroke-width: 2; rx: 8; }
      .serving-phase { fill: #fdf2e9; stroke: #e67e22; stroke-width: 2; rx: 8; }
      
      .step-box { fill: #ffffff; stroke: #34495e; stroke-width: 1.5; rx: 6; }
      .data-store { fill: #f8f9fa; stroke: #6c757d; stroke-width: 1.5; rx: 4; }
      .search-step { fill: #ffffff; stroke: #e67e22; stroke-width: 1.5; rx: 6; }
      
      .data-flow { stroke: #27ae60; stroke-width: 3; fill: none; marker-end: url(#greenArrow); }
      .process-flow { stroke: #3498db; stroke-width: 3; fill: none; marker-end: url(#blueArrow); }
      .index-flow { stroke: #f39c12; stroke-width: 3; fill: none; marker-end: url(#orangeArrow); }
      .api-flow { stroke: #e67e22; stroke-width: 2; fill: none; marker-end: url(#redArrow); }
    </style>
    
    <marker id="greenArrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#27ae60" />
    </marker>
    <marker id="blueArrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#3498db" />
    </marker>
    <marker id="orangeArrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#f39c12" />
    </marker>
    <marker id="redArrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#e67e22" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="700" y="35" text-anchor="middle" class="title">KMS-SFDC Data Flow &amp; Processing Pipeline</text>
  <text x="700" y="55" text-anchor="middle" class="small-text">End-to-End Data Processing from Salesforce to Vector Search API</text>
  
  <!-- Row 1: Data Processing Pipeline -->
  
  <!-- Data Extraction -->
  <rect x="50" y="80" width="300" height="160" class="extraction-phase"/>
  <text x="200" y="105" text-anchor="middle" class="section-title">Data Extraction</text>
  
  <rect x="70" y="120" width="260" height="30" class="step-box"/>
  <text x="200" y="135" text-anchor="middle" class="step-title">SFDC Authentication</text>
  <text x="85" y="145" class="text">Login with credentials from .env</text>
  
  <rect x="70" y="160" width="260" height="30" class="step-box"/>
  <text x="200" y="175" text-anchor="middle" class="step-title">Field Mapping</text>
  <text x="85" y="185" class="text">Map config fields to SFDC schema</text>
  
  <rect x="70" y="200" width="260" height="30" class="step-box"/>
  <text x="200" y="215" text-anchor="middle" class="step-title">Batch Query Execution</text>
  <text x="85" y="225" class="text">2,000 records/batch, 2-year range</text>
  
  <!-- Text Processing -->
  <rect x="400" y="80" width="300" height="160" class="processing-phase"/>
  <text x="550" y="105" text-anchor="middle" class="section-title">Text Processing</text>
  
  <rect x="420" y="120" width="260" height="30" class="step-box"/>
  <text x="550" y="135" text-anchor="middle" class="step-title">Text Preprocessing</text>
  <text x="435" y="145" class="text">HTML/URL removal, normalization</text>
  
  <rect x="420" y="160" width="260" height="30" class="step-box"/>
  <text x="550" y="175" text-anchor="middle" class="step-title">Field Combination</text>
  <text x="435" y="185" class="text">Merge 8 text fields → combined_text</text>
  
  <rect x="420" y="200" width="260" height="30" class="step-box"/>
  <text x="550" y="215" text-anchor="middle" class="step-title">Quality Filtering</text>
  <text x="435" y="225" class="text">Min 10 chars, max 10K chars</text>
  
  <!-- Vector Generation -->
  <rect x="750" y="80" width="300" height="160" class="indexing-phase"/>
  <text x="900" y="105" text-anchor="middle" class="section-title">Vector Generation</text>
  
  <rect x="770" y="120" width="260" height="30" class="step-box"/>
  <text x="900" y="135" text-anchor="middle" class="step-title">Nomic Embeddings</text>
  <text x="785" y="145" class="text">nomic-embed-text-v1.5 (768-dim)</text>
  
  <rect x="770" y="160" width="260" height="30" class="step-box"/>
  <text x="900" y="175" text-anchor="middle" class="step-title">Batch Processing</text>
  <text x="785" y="185" class="text">5,000 texts/batch for embeddings</text>
  
  <rect x="770" y="200" width="260" height="30" class="step-box"/>
  <text x="900" y="215" text-anchor="middle" class="step-title">Vector Normalization</text>
  <text x="785" y="225" class="text">L2 normalization for cosine similarity</text>
  
  <!-- Row 2: Storage and API -->
  
  <!-- Index Building -->
  <rect x="50" y="280" width="300" height="120" class="extraction-phase"/>
  <text x="200" y="305" text-anchor="middle" class="section-title">Index Building</text>
  
  <rect x="70" y="325" width="260" height="30" class="step-box"/>
  <text x="200" y="340" text-anchor="middle" class="step-title">FAISS Index Creation</text>
  <text x="85" y="350" class="text">IndexIVFPQ with 4096 clusters</text>
  
  <rect x="70" y="365" width="260" height="30" class="step-box"/>
  <text x="200" y="380" text-anchor="middle" class="step-title">Training &amp; Addition</text>
  <text x="85" y="390" class="text">Train on sample, add all vectors</text>
  
  <!-- Storage -->
  <rect x="400" y="280" width="300" height="120" class="processing-phase"/>
  <text x="550" y="305" text-anchor="middle" class="section-title">Persistent Storage</text>
  
  <rect x="420" y="325" width="260" height="30" class="step-box"/>
  <text x="550" y="340" text-anchor="middle" class="step-title">Index Serialization</text>
  <text x="435" y="350" class="text">Save FAISS binary to disk</text>
  
  <rect x="420" y="365" width="260" height="30" class="step-box"/>
  <text x="550" y="380" text-anchor="middle" class="step-title">Metadata Storage</text>
  <text x="435" y="390" class="text">JSON file with case details</text>
  
  <!-- API Serving -->
  <rect x="750" y="280" width="300" height="120" class="serving-phase"/>
  <text x="900" y="305" text-anchor="middle" class="section-title">Search API</text>
  
  <rect x="770" y="325" width="260" height="30" class="step-box"/>
  <text x="900" y="340" text-anchor="middle" class="step-title">Index Loading</text>
  <text x="785" y="350" class="text">Memory-map FAISS index on startup</text>
  
  <rect x="770" y="365" width="260" height="30" class="step-box"/>
  <text x="900" y="380" text-anchor="middle" class="step-title">Query Processing</text>
  <text x="785" y="390" class="text">Embed query → similarity search</text>
  
  <!-- Data Stores Row -->
  <rect x="120" y="430" width="100" height="50" class="data-store"/>
  <text x="170" y="450" text-anchor="middle" class="step-title">Raw SFDC Data</text>
  <text x="170" y="465" text-anchor="middle" class="small-text">2.5M+ records</text>
  
  <rect x="260" y="430" width="100" height="50" class="data-store"/>
  <text x="310" y="450" text-anchor="middle" class="step-title">Processed Text</text>
  <text x="310" y="465" text-anchor="middle" class="small-text">Combined text</text>
  
  <rect x="400" y="430" width="100" height="50" class="data-store"/>
  <text x="450" y="450" text-anchor="middle" class="step-title">Vector Embeddings</text>
  <text x="450" y="465" text-anchor="middle" class="small-text">768-dim vectors</text>
  
  <rect x="540" y="430" width="100" height="50" class="data-store"/>
  <text x="590" y="450" text-anchor="middle" class="step-title">FAISS Index</text>
  <text x="590" y="465" text-anchor="middle" class="small-text">~12GB size</text>
  
  <rect x="680" y="430" width="100" height="50" class="data-store"/>
  <text x="730" y="450" text-anchor="middle" class="step-title">Metadata JSON</text>
  <text x="730" y="465" text-anchor="middle" class="small-text">Case details</text>
  
  <!-- Search Request Flow Section -->
  <rect x="50" y="520" width="1300" height="320" class="serving-phase"/>
  <text x="80" y="545" class="section-title">Search Request Flow (Detailed)</text>
  
  <!-- Main Flow Steps -->
  <rect x="80" y="560" width="160" height="60" class="search-step"/>
  <text x="160" y="580" text-anchor="middle" class="step-title">Query Input</text>
  <text x="100" y="595" class="detail-text">• Natural language query</text>
  <text x="100" y="608" class="detail-text">• GET/POST request</text>
  
  <rect x="270" y="560" width="160" height="60" class="search-step"/>
  <text x="350" y="580" text-anchor="middle" class="step-title">Input Validation</text>
  <text x="290" y="595" class="detail-text">• Pydantic models</text>
  <text x="290" y="608" class="detail-text">• Parameter checking</text>
  
  <rect x="460" y="560" width="160" height="60" class="search-step"/>
  <text x="540" y="580" text-anchor="middle" class="step-title">Query Embedding</text>
  <text x="480" y="595" class="detail-text">• Nomic encode</text>
  <text x="480" y="608" class="detail-text">• 768-dim vector</text>
  
  <rect x="650" y="560" width="160" height="60" class="search-step"/>
  <text x="730" y="580" text-anchor="middle" class="step-title">Vector Search</text>
  <text x="670" y="595" class="detail-text">• FAISS similarity</text>
  <text x="670" y="608" class="detail-text">• Top-K retrieval</text>
  
  <rect x="840" y="560" width="160" height="60" class="search-step"/>
  <text x="920" y="580" text-anchor="middle" class="step-title">Result Processing</text>
  <text x="860" y="595" class="detail-text">• Similarity filtering</text>
  <text x="860" y="608" class="detail-text">• Metadata lookup</text>
  
  <rect x="1030" y="560" width="160" height="60" class="search-step"/>
  <text x="1110" y="580" text-anchor="middle" class="step-title">JSON Response</text>
  <text x="1050" y="595" class="detail-text">• Formatted output</text>
  <text x="1050" y="608" class="detail-text">• HTTP headers</text>
  
  <!-- Additional Details Row -->
  <rect x="80" y="650" width="200" height="80" class="search-step"/>
  <text x="180" y="670" text-anchor="middle" class="step-title">Query Examples</text>
  <text x="100" y="690" class="detail-text">• "login authentication issues"</text>
  <text x="100" y="705" class="detail-text">• "password reset problems"</text>
  <text x="100" y="720" class="detail-text">• "system performance slow"</text>
  
  <rect x="300" y="650" width="200" height="80" class="search-step"/>
  <text x="400" y="670" text-anchor="middle" class="step-title">Search Parameters</text>
  <text x="320" y="690" class="detail-text">• top_k: Number of results (1-100)</text>
  <text x="320" y="705" class="detail-text">• threshold: Min similarity (0.0-1.0)</text>
  <text x="320" y="720" class="detail-text">• filters: Additional constraints</text>
  
  <rect x="520" y="650" width="200" height="80" class="search-step"/>
  <text x="620" y="670" text-anchor="middle" class="step-title">Performance Metrics</text>
  <text x="540" y="690" class="detail-text">• Search latency: &lt;50ms p50</text>
  <text x="540" y="705" class="detail-text">• Throughput: 1K+ QPS</text>
  <text x="540" y="720" class="detail-text">• Accuracy: &gt;85% relevance</text>
  
  <rect x="740" y="650" width="200" height="80" class="search-step"/>
  <text x="840" y="670" text-anchor="middle" class="step-title">Response Structure</text>
  <text x="760" y="690" class="detail-text">• query: Original search text</text>
  <text x="760" y="705" class="detail-text">• results: Array of matches</text>
  <text x="760" y="720" class="detail-text">• total_results, search_time_ms</text>
  
  <rect x="960" y="650" width="200" height="80" class="search-step"/>
  <text x="1060" y="670" text-anchor="middle" class="step-title">Error Handling</text>
  <text x="980" y="690" class="detail-text">• Index not ready (503)</text>
  <text x="980" y="705" class="detail-text">• Invalid parameters (422)</text>
  <text x="980" y="720" class="detail-text">• Internal errors (500)</text>
  
  <!-- Flow Arrows -->
  <!-- Main processing pipeline -->
  <line x1="350" y1="160" x2="400" y2="160" class="data-flow"/>
  <line x1="700" y1="160" x2="750" y2="160" class="process-flow"/>
  
  <!-- Vector to Index flow -->
  <line x1="900" y1="240" x2="900" y2="260" class="index-flow"/>
  <line x1="900" y1="260" x2="200" y2="260" class="index-flow"/>
  <line x1="200" y1="260" x2="200" y2="280" class="index-flow"/>
  
  <!-- Index to Storage -->
  <line x1="350" y1="340" x2="400" y2="340" class="process-flow"/>
  
  <!-- Storage to API -->
  <line x1="700" y1="340" x2="750" y2="340" class="api-flow"/>
  
  <!-- Data store connections -->
  <line x1="200" y1="400" x2="170" y2="430" class="data-flow"/>
  <line x1="550" y1="400" x2="310" y2="430" class="process-flow"/>
  <line x1="550" y1="400" x2="450" y2="430" class="process-flow"/>
  <line x1="550" y1="400" x2="590" y2="430" class="index-flow"/>
  <line x1="550" y1="400" x2="730" y2="430" class="index-flow"/>
  
  <!-- Search flow arrows -->
  <line x1="240" y1="590" x2="270" y2="590" class="api-flow"/>
  <line x1="430" y1="590" x2="460" y2="590" class="api-flow"/>
  <line x1="620" y1="590" x2="650" y2="590" class="api-flow"/>
  <line x1="810" y1="590" x2="840" y2="590" class="api-flow"/>
  <line x1="1000" y1="590" x2="1030" y2="590" class="api-flow"/>
</svg>